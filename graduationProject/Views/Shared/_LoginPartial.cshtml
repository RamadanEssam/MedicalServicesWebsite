@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav" >
    @if (SignInManager.IsSignedIn(User))
    {
        //to show profile image of user
        @if (UserManager.GetUserAsync(User).Result.ProfileImg != null)
        {
            <li class="nav-item">
                <img class="avatar rounded-circle" id="profileImg" alt="profile" src="data:image/*;base64,@(Convert.ToBase64String(UserManager.GetUserAsync(User).Result.ProfileImg))" />
            </li>
        }
        <li class="nav-item">
            <a class="nav-link " asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"> @User.Identity.Name</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link ">تسجيل الخروج</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">التسجيل</a>
        </li>
        <li class="nav-item">
            <a class="nav-link " asp-area="Identity" asp-page="/Account/Login">تسجيل الدخول</a>
        </li>
    }
</ul>
